name: dserver-container-composition-test

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8']
        dtool-lookup-api-version: ['master']

    steps:
    - name: Git checkout this
      uses: actions/checkout@v4

    - name: Git checkout dtool-lookup-api ${{ matrix.dtool-lookup-api-version }}
      uses: actions/checkout@v4
      with:
        repository: livMatS/dtool-lookup-api
        ref: ${{ matrix.dtool-lookup-api-version }}
        path: dtool-lookup-api

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pull container images and launch composition
      run: |
        # the following line allows testing locally with act (https://github.com/nektos/act),
        # i.e. by running
        #   act -W .github/workflows/test.yml --bind
        # from within this repository's root directory (see README for more information).
        sudo chown runner:docker /var/run/docker.sock
        # see https://github.com/nektos/act/issues/724#issuecomment-855390956

        source env.testing.rc

        echo "printenv"
        printenv

        echo "merged docker-compose config"
        docker compose ${DOCKER_COMPOSE_OPTS} config

        echo "docker compose build"
        docker compose ${DOCKER_COMPOSE_OPTS} build

        echo "docker image ls"
        docker image ls

        echo "generate jwt key"
        cd keys
        bash generate_jwt_key.sh
        cd ..

        echo "docker compose up -d"
        docker compose ${DOCKER_COMPOSE_OPTS} up -d 

        echo "docker container ls --all"
        docker container ls --all

        echo "docker volume ls"
        docker volume ls
        
        echo "docker images"
        docker compose ${DOCKER_COMPOSE_OPTS} images

        echo "dtool lookup server log"
        docker compose ${DOCKER_COMPOSE_OPTS} logs dserver
        
        echo "dtool lookup client log"
        docker compose ${DOCKER_COMPOSE_OPTS} logs dtool_lookup_client

        echo "s3server log"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs s3server

        echo "s3server-init log"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs s3server_init

        echo "testing-env-init"
        docker compose  ${DOCKER_COMPOSE_OPTS} logs testing_env_init

        echo "explicitly re-evoke dataset indexing"
        docker compose ${DOCKER_COMPOSE_OPTS} exec -T dserver /refresh_index

        echo "dtool query '{}'"
        docker compose ${DOCKER_COMPOSE_OPTS} run dtool_lookup_client query '{}'

    - name: Install basic testing requirements
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel setuptools-scm[toml] importlib-metadata
        pip install pytest pytest-cov pytest-ordering

    - name: Install dtool-lookup-api
      working-directory: dtool-lookup-api
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install ".[testing]"
        echo "pip list"
        pip list

    - name: Run dtool-lookup-api tests
      working-directory: dtool-lookup-api
      run: pytest

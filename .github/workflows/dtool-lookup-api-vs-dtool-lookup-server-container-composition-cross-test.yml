name: dtool-lookup-api-vs-dtool-lookup-server-container-composition-cross-test

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.10']
        dtool-lookup-server-container-composition-version: ['0.7.0']
        dtool-lookup-api-version: ['master']
      
    env:
      DOCKER_COMPOSE_OPTS: >-
        -p dtool-lookup-server-default-ports
        -f docker-compose.yml 
        -f docker-compose.versions.yml
        -f docker-compose.default-envs.yml 
        -f docker-compose.default-ports.yml 
        -f docker-compose.testing.yml
        -f docker-compose.testing.versions.yml
      
    steps:
    - name: Git checkout dtool-lookup-server-container-composition ${{ matrix.dtool-lookup-server-container-composition-version }}
      uses: actions/checkout@v3
      with:
        repository: livMatS/dtool-lookup-server-container-composition
        ref: ${{ matrix.dtool-lookup-server-container-composition-version }}
        path: dtool-lookup-server-container-composition

    - name: Git checkout dtool-lookup-api ${{ matrix.dtool-lookup-api-version }}
      uses: actions/checkout@v3
      with:
        repository: livMatS/dtool-lookup-api
        ref: ${{ matrix.dtool-lookup-api-version }}
        path: dtool-lookup-api

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Pull container images and prepare composition
      working-directory: ./dtool-lookup-server-container-composition
      run: |
        # the following line allows testing locally with act (https://github.com/nektos/act),
        # i.e. by running
        #   act -W .github/workflows/test.yml --bind
        # from within this repository's root directory (see README for more information).
        sudo chown runner:docker /var/run/docker.sock
        # see https://github.com/nektos/act/issues/724#issuecomment-855390956

        echo "merged docker-compose config"
        docker-compose ${DOCKER_COMPOSE_OPTS} config

        echo "pull images"
        docker-compose ${DOCKER_COMPOSE_OPTS} pull 

        echo "docker image ls"
        docker image ls
        echo "generate jwt key"
        cd keys
        bash generate_jwt_key.sh

    - name: Provide dtool lookup server ${{ matrix.dtool-lookup-server-version }} and test with pytest
      working-directory: dtool-lookup-server-container-composition
      run: |
        docker-compose ${DOCKER_COMPOSE_OPTS} up -d 

        sleep 10 # TODO: wait for all services to be ready and healthy
       
        echo "docker container ls --all"
        docker container ls --all

        echo "docker volume ls"
        docker volume ls
        
        echo "docker images"
        docker-compose ${DOCKER_COMPOSE_OPTS} images

        echo "dtool lookup server log"
        docker-compose ${DOCKER_COMPOSE_OPTS} logs dtool_lookup_server
        
        echo "dtool lookup client log"
        docker-compose ${DOCKER_COMPOSE_OPTS} logs dtool_lookup_client

        # create dtool directory on samba share
        echo "smbclient -U guest -c "mkdir dtool" -N -W WORKGROUP //sambaserver/sambashare"
        docker-compose ${DOCKER_COMPOSE_OPTS} run --entrypoint smbclient dtool_lookup_client -U guest -c "mkdir dtool" -N -W WORKGROUP //sambaserver/sambashare

        # place test datasets on storage infrastructure
        echo "dtool cp tests/dtool/simple_test_dataset smb://test-share"
        docker-compose ${DOCKER_COMPOSE_OPTS} run -v $(pwd)/tests:/tests dtool_lookup_client cp /tests/dtool/simple_test_dataset smb://test-share

        echo "dtool cp tests/dtool/simple_test_dataset s3://test-bucket"
        docker-compose ${DOCKER_COMPOSE_OPTS} run -v $(pwd)/tests:/tests dtool_lookup_client cp /tests/dtool/simple_test_dataset s3://test-bucket

        echo "dtool ls smb://test-share"
        docker-compose ${DOCKER_COMPOSE_OPTS} run dtool_lookup_client ls smb://test-share

        echo "dtool ls s3://test-bucket"
        docker-compose ${DOCKER_COMPOSE_OPTS} run dtool_lookup_client ls s3://test-bucket
        
        echo "explicitly re-evoke dataset indexing"
        docker-compose ${DOCKER_COMPOSE_OPTS} exec -T dtool_lookup_server /refresh_index

        echo "dtool query '{}'"
        docker-compose ${DOCKER_COMPOSE_OPTS} run dtool_lookup_client query '{}'

    - name: Install basic testing requirements
      working-directory: dtool-lookup-api
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel setuptools-scm[toml] importlib-metadata
        pip install pytest pytest-cov pytest-ordering

    - name: Install dtool-lookup-api
      working-directory: dtool-lookup-api
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install ".[testing]"
        echo "pip list"
        pip list

    - name: Run dtool-lookup-api tests
      working-directory: dtool-lookup-api
      run: pytest
      
    - name: Shut down container composition
      working-directory: dtool-lookup-server-container-composition
      run: |
        echo "docker-compose down --volumes"
        docker-compose ${DOCKER_COMPOSE_OPTS} down --volumes --timeout 30
